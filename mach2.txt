100000000  
100001111
101001010
100001010
100010111
101010011
100010011
111011100 //loop
111100100
111101100
111110100
111111100
111000100
111001100
111010100
111011100
111110100
111111100
000001 // lw  $s1             # load data MEM -> $t7      ($t7 = b4 b3 b2 p4 b1 p2 p1 p0)
011010111
100110001
111110010
011011110
111110100
100110001
101110001
111110010
110110001
011011110
011100110
111110100
100110001
101110010
111110010
110110010
011011110
011101110
111110100
100110001
101110011
111110010
110110011
011011110
011100110
011101110
111110100
100110001
101110100
111110010
110110100
011011110
011110110
111110100
100110001
101110101
111110010
110110101
011011110
011100110
011110110
111110100
100110001
101110110
111110010
110110110
011011110
011101110
011110110
111110100
100110001
101110111
111110010
110110111
011011110
011100110
011101110
011110110
111011100
111110100
111111100
100001001
000001 // lw  $s1             # load data MEM -> $t7      ($t7 = b4 b3 b2 p4 b1 p2 p1 p0)
011011111
100110001
111110011
011011110
011111110
111110100
100110001
101110110
111110011
110110110
011011110
011100110
011111110
111110100
100110001
101110010
111110011
110110010
011011110
011101110
011111110
111110100
100110001
101110011
111110011
110110011
011011110
011100110
011101110
011111110
111110100
100110001
101110100
111110011
110110100
011011110
011110110
011111110
111110100
100110001
101110101
111110011
110110101
011011110
011100110
011110110
011111110
111110100
100110001
101110110
111110011
110110110
011011110
011101110
011110110
011111110
111110100
100110001
101110111
111110011
110110111
011011110
011100110
011101110
011110110
011111110
111000100
111001100
111110100
111111100
111101100
100101001
111101011
010 yesRecover     
111101100
100101001
111101111
010 noRecover      
111101100
100101001
111101110
010 noRecover      
111101100
100101001
111101101
010 noRecover      
111101100
100101001
111101100
010 noRecover      
100101001
010 insetRestBits  
100110001 //noRecover:
101110111
011111110
100000001
001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .)
010 excapeLoop     
100110001 //yesRecover:
101110110
011001110
111110100
111101100
100101001
111101111
010 eIsFalse0      
111101100
100101001
111101110
010 fIsFalse0      
111101100
100101001
111101101
010 tIsFalse0      
111101100
100101001
111101100
010 oIsFalse0      
100110001
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101111
101101010
100101010
111010101
10001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .)1
111010110
010 insetRestBits
100110010 // oIsFalse0: 
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101111
101101010
100101001
111010101
100010010
111010110
010 insetRestBits
111101100 // tIsFalse0: 
100101001
111101100
010 oIsFalse1      
100110100
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101110
101101010
100101011
111010101
100010100
111010110
010 insetRestBits
100110001 // oIsFalse1: 
101110011
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101101
101101010
100101011
111010101
100010111
10001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .)1
111010110
010 insetRestBits
111101100 //fIsFalse0:
100101001
111101101
010 tIsFalse1      
111101100
100101001
111101100
010 oIsFalse2      
100110010
101110011
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101011
101101010
100101011
111010101
100010111
100010111
100010010
111010110
010 insetRestBits
100110001 // oIsFalse2: 
101110101
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101110
101101011
100101111
101101010
100101011
111010101
100010111
100010111
100010111
100010111
100010100
111010110
010 insetRestBits
111101100 // tIsFalse1: 
100101001
111101100
010 oIsFalse3      
100110001
101110110
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101101
101101011
100101111
101101010
100101001
111010101
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
10001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .)1
111010110
010 insetRestBits
100110001 // oIsFalse3: 
101110111
111101100
011101110
111110010
111101100
100101111
101101011
100101111
101101001
100101001
011110101
111101100
100101111
101101011
100101111
101101001
100101001
111010101
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010111
100010010
111010110
010 insetRestBits
111101100 // eIsFalse0: 
100101001
111101110
010 fIsFalse1      
111101100
100101001
111101101
010 tIsFalse2      
111101100
100101001
111101100
010 oIsFalse4      
100110001
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101111
101101010
100101010
111011101
100011001
111011110
010 insetRestBits
100110010 // oIsFalse4: 
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101111
101101010
100101001
111011101
100011010
111011110
010 insetRestBits
111101100 // tIsFalse2:
100101001
111101100
010 oIsFalse5      
100110100
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101110
101101010
100101011
111011101
100011100
111011110
010 insetRestBits
100110001 // oIsFalse5: 
101110011
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101101
101101010
100101011
111011101
100011111
100011001
111011110
010 insetRestBits
111101100 // fIsFalse1:
100101001
111101101
010 tIsFalse3      
111101100
100101001
111101100
010 oIsFalse6      
100110010
101110011
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101111
101101011
100101011
101101010
100101011
111011101
100011111
100011111
100011010
111011110
010 insetRestBits
100110001 // oIsFalse6: 
101110101
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101110
101101011
100101111
101101010
100101011
111011101
100011111
100011111
100011111
100011111
100011100
111011110
010 insetRestBits
111101100 //tIsFalse3: 
100101001
111101100
010 IsFalse7       
100110001
101110110
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101010
100101011
011110101
111101100
100101101
101101011
100101111
101101010
100101001
111011101
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011001
111011110
010 insetRestBits
100110001 // oIsFalse7: 
101110111
111101100
011101110
111110011
111101100
100101111
101101011
100101111
101101001
100101001
011110101
111101100
100101111
101101011
100101111
101101001
100101001
111011101
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011111
100011010
111011110
010 insetRestBits
111110100 // insetRestBits:
100110111
101110101
111110011
110110101
011001110
111110100
100110111
101110110
100110001
101110110
111110011
101110011
011000110
111110100
100110111
101110101
111110010
100111001
101111011
111111010
101111111
011110111
110110100
011000110
111111100
011111000
001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .)
100000001
111111100
011111001
001000 // sw  $s0             # store data $t7 -> MEM (only 1 0 . . . . . .) 
111110100 // excapeLoop:
011110000
011110010
100000001
100001001
111101100
011101110
010 loop    