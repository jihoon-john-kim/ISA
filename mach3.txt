
100000001
101000101
100010111
101010010
100010011
000000000// load data MEM -> 111  (111 =  b8 b7 b6 b5 b4 b3 b2 b1) : MEM[32]
101111001
110111011
111001111
111000100
111000100 // loop:
111001100
111101100
111111100
000000000// load data MEM -> 111  (111 =  b8 b7 b6 b5 b4 b3 b2 b1) : MEM[32]
011000111
101111100
011001111
100000001
000000000// load data MEM -> 111  (111 =  b8 b7 b6 b5 b4 b3 b2 b1) : MEM[32]
110111100
011001111
011101000
101101011
110101011
011101001
010000001
100011001
100101001
100110001
111101100 // skip1:
011101000
101101010
110101011
011101001
010000010
100011001
100101001
100110001
111101100 // skip2:
011101000
101101001
110101011
011101001
010000011
100011001
100101001
100110001
111101100 //skip3:
011101000
110101011
011101001
010000100
100011001
100101001
100110001
111101100 // skip4:
011101110
010000101
100101001
010000110
111110100 // skip5:
100100001
111100100
111101100 // skip6: 
011101001
101101011
110101011
011101001
010000111
100101001
111101100 // skip7:
011101001
101101010
110101011
011101001
010001000
100101001
111101100 // skip8:
011101001
101101001
110101011
011101001
010001001
100101001
111101100 // skip9:
011101001
110101011
011101001
010001010
100101001
111101100 // skip10:
011101000
011101010
010000000
111000100
111101100
111111100
000000000// load data MEM -> 111  (111 =  b8 b7 b6 b5 b4 b3 b2 b1) : MEM[32]
011000111
011101001
101101011
110101011
011101001
010001011 
100011001
100101001
100110001
111101100 // skip11:
011101001
101101010
110101011
010001100
100011001
100101001
100110001
111101100 //skip12:
011101001
101101001
110101011
011101001
010001101
100011001
100101001
100110001
111101100 // skip13:
011101001
110101011
011101001
010001110 
100011001
100101001
100110001
111101100 //skip14:
011101110
010001111
100101001
010010000
111110100 //skip15: 
100100001
111100100
100000010 //skip16: 
111111100
011111011
001000000
100000001
111111100
011111100
001000000
100000001
111111100
011111101
001000000
